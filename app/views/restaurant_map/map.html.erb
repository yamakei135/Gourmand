<!doctype html>
<html>
<head>
<meta charset="utf-8">
<meta name="robots" content="noindex" />
<title>サンプルコード 【JS】GoogleMapや地名検索をページに埋め込んで位置情報を取得する方法</title>
​
</head>
​
<body>
  <h1>あしあとMAP</h1>
  <p>今までに行ったお店がわかるよ！</p>
  <form onsubmit="return false;">
    <input type="text" value="コンビニ" id="address">
    <button type="button" value="検索" id="map_button">検索</button>
  </form>
  <!-- 地図を表示させる要素 -->
  <div class="map_box01"><div id="map-canvas" style="width: 500px;height: 350px;"></div></div>
  <script>
    var map;
    var marker = [];
    var infoWindow = [];
    var markerData = []; // マーカーを立てる場所名・緯度・経度
    <% @posts.each do |post| %>
      if ("<%= post.location_lat %>" != ""){//この例外処理はうまく機能してない
        markerData.push({
          name: '<%= post.restaurant_name %>',
          lat: <%= post.location_lat %>,
          lng: <%= post.location_lng %>
        });
      }
    <% end %>
    console.log(markerData);
    function initMap() {
      var target = document.getElementById('map-canvas');
      var address = document.getElementById('address').value;
      var geocoder = new google.maps.Geocoder();
      geocoder.geocode({ address: address }, function(results, status){
        //ステータスが OK で results[0] が存在すれば、地図を生成
        if (status === 'OK' && results[0]){
          map = new google.maps.Map(target, {
          //results[0].geometry.location に緯度・経度のオブジェクトが入っている
            center: results[0].geometry.location,
            zoom: 13
          });
          for (var i = 0; i < markerData.length; i++) {
            markerLatLng = new google.maps.LatLng({lat: markerData[i]['lat'], lng: markerData[i]['lng']});
            var marker = new google.maps.Marker({
              position: markerLatLng,
              map: map,
              animation: google.maps.Animation.DROP,
              icon: {
                url: "/dog_footprint.png",
                scaledSize: new google.maps.Size(30, 30)
              },
              label: {
                text: "1" ,
                color: "blueviolet" ,
                fontSize: "20px" ,
                fontWeight: "bold"
              }
            });
            infoWindow[i] = new google.maps.InfoWindow({ // 吹き出しの追加
              content: '<div class="sample">' + markerData[i]['name'] + '</div>' // 吹き出しに表示する内容
            });

            //markerEvent(i);
          }
        }else{
        //ステータスが OK 以外の場合や results[0] が存在しなければ、アラートを表示して処理を中断
          alert('失敗しました。理由: ' + status);
          return;
        }

      });

    }
  </script>

  <script type="text/javascript" src="//maps.google.com/maps/api/js?language=ja&region=JP&key=<%= ENV['GOOGLE_API_KEY'] %>&callback=initMap&libraries=places" async defer></script>


  <script type="text/javascript">
  function markerEvent(i) {
    marker[i].addListener('click', function() { // マーカーをクリックしたとき
      infoWindow[i].open(map, marker[i]); // 吹き出しの表示
    });
  }
  var button = document.getElementById("map_button");
  function initAutocomplete(){
    //対応させるテキストボックス
    var input = document.getElementById('address');
    //プレイスを検索する領域
    var LatLngFrom = new google.maps.LatLng(34.5,138.0);
    var LatLngTo   = new google.maps.LatLng(35.5,139.0);
    var bounds = new google.maps.LatLngBounds(LatLngFrom, LatLngTo);
　　   //オートコンプリートのオプション
    var options = {
      types: ['establishment'],                      // 検索タイプ
      bounds: bounds,                            // 範囲優先検索
      componentRestrictions: {country: 'jp'}     // 日本国内の住所のみ
    };
    autocomplete = new google.maps.places.Autocomplete(input, options);
  }
  window.onload = function(){
    //getMap.getAddress();
    // フォームに入力された住所情報を取得
    var address = document.getElementById("address").value;
    // 取得した住所を引数に指定してcodeAddress()関数を実行
    //codeAddress(address);
    initAutocomplete();
  }
  button.onclick = function() {
    var target = document.getElementById('map-canvas');
    // フォームに入力された住所情報を取得
    var address = document.getElementById("address").value;
    // 取得した住所を引数に指定してcodeAddress()関数を実行
    var geocoder = new google.maps.Geocoder();
    geocoder.geocode({ address: address }, function(results, status){
      //ステータスが OK で results[0] が存在すれば、地図を生成
      if (status === 'OK' && results[0]){
        map = new google.maps.Map(target, {
        //results[0].geometry.location に緯度・経度のオブジェクトが入っている
          center: results[0].geometry.location,
          zoom: 14
        });
        var marker = new google.maps.Marker({
          position: results[0].geometry.location,
          map: map,
          animation: google.maps.Animation.DROP,
          icon: {
            url: "https://maps.google.com/mapfiles/ms/micons/man.png",
            scaledSize: new google.maps.Size(30, 30)
          },
          label: {
            text: "1" ,
            color: "blueviolet" ,
            fontSize: "20px" ,
            fontWeight: "bold"
          }
        });
      }else{
      //ステータスが OK 以外の場合や results[0] が存在しなければ、アラートを表示して処理を中断
        alert('失敗しました。理由: ' + status);
        return;
      }
    });
  }
  /*
    function initAutocomplete(){
      //対応させるテキストボックス
      var input = document.getElementById('address');
      //プレイスを検索する領域
      var LatLngFrom = new google.maps.LatLng(34.5,138.0);
      var LatLngTo   = new google.maps.LatLng(35.5,139.0);
      var bounds = new google.maps.LatLngBounds(LatLngFrom, LatLngTo);
　　   //オートコンプリートのオプション
      var options = {
        types: ['establishment'],                      // 検索タイプ
        bounds: bounds,                            // 範囲優先検索
        componentRestrictions: {country: 'jp'}     // 日本国内の住所のみ
      };
      autocomplete = new google.maps.places.Autocomplete(input, options);
    }
    window.onload = function(){
      //getMap.getAddress();
      // フォームに入力された住所情報を取得
      //var address = document.getElementById("address").value;
      // 取得した住所を引数に指定してcodeAddress()関数を実行
      //codeAddress(address);
      initAutocomplete();
    }
    var button = document.getElementById("map_button");
    map.addListener('click', function(e) {
      getClickLatLng(e.latLng, map);
    });
    function getClickLatLng(lat_lng, map) {

      //☆表示している地図上の緯度経度
      document.getElementById('lat').value=lat_lng.lat();
      document.getElementById('lng').value=lat_lng.lng();

      // マーカーを設置
      marker.setMap(null);
      marker = new google.maps.Marker({
        position: lat_lng,
        map: map
      });

      // 座標の中心をずらす
      map.panTo(lat_lng);
    }

var getMap = (function() {
  function codeAddress(address) {
    // google.maps.Geocoder()コンストラクタのインスタンスを生成
    var geocoder = new google.maps.Geocoder();
    // 地図表示に関するオプション
    var mapOptions = {
      zoom: 16,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };

    // 地図を表示させるインスタンスを生成
    var map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

    //マーカー変数用意
    var marker;
    // geocoder.geocode()メソッドを実行
    geocoder.geocode( {'address': address}, function(results, status) {

      // ジオコーディングが成功した場合
      if (status == google.maps.GeocoderStatus.OK) {

        // 変換した緯度・経度情報を地図の中心に表示
        map.setCenter(results[0].geometry.location);

        //☆表示している地図上の緯度経度
        document.getElementById('lat').value=results[0].geometry.location.lat();
        document.getElementById('lng').value=results[0].geometry.location.lng();

        // マーカー設定
        marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
        });

      // ジオコーディングが成功しなかった場合
      } else {
        console.log('Geocode was not successful for the following reason: ' + status);
      }

    });

    // マップをクリックで位置変更
    map.addListener('click', function(e) {
      getClickLatLng(e.latLng, map);
    });
    function getClickLatLng(lat_lng, map) {

      //☆表示している地図上の緯度経度
      document.getElementById('lat').value=lat_lng.lat();
      document.getElementById('lng').value=lat_lng.lng();

      // マーカーを設置
      marker.setMap(null);
      marker = new google.maps.Marker({
        position: lat_lng,
        map: map
      });

      // 座標の中心をずらす
      map.panTo(lat_lng);
    }

  }

  //inputのvalueで検索して地図を表示
  return {
    getAddress: function() {
      // ボタンに指定したid要素を取得
      var button = document.getElementById("map_button");

      function initAutocomplete(){
        //対応させるテキストボックス
        var input = document.getElementById('address');
        //プレイスを検索する領域
        var LatLngFrom = new google.maps.LatLng(35.692195,139.7576653);
        var LatLngTo   = new google.maps.LatLng(35.696157,139.7525771);
        var bounds = new google.maps.LatLngBounds(LatLngFrom, LatLngTo);
　　      //オートコンプリートのオプション
        var options = {
          types: ['establishment'],                      // 検索タイプ
          bounds: bounds,                            // 範囲優先検索
          componentRestrictions: {country: 'jp'}     // 日本国内の住所のみ
        };
        autocomplete = new google.maps.places.Autocomplete(input, options);
      }
      // ボタンが押された時の処理
      button.onclick = function() {
        // フォームに入力された住所情報を取得
        var address = document.getElementById("address").value;
        // 取得した住所を引数に指定してcodeAddress()関数を実行
        codeAddress(address);
        initAutocomplete();
      }

      //読み込まれたときに地図を表示
      google.maps.event.addDomListener(window, 'load', function(){
        // フォームに入力された住所情報を取得
        var address = document.getElementById("address").value;
        // 取得した住所を引数に指定してcodeAddress()関数を実行
        //codeAddress(address);
        initAutocomplete();
      });

      window.onload = function(){
        getMap.getAddress();
        // フォームに入力された住所情報を取得
        var address = document.getElementById("address").value;
        // 取得した住所を引数に指定してcodeAddress()関数を実行
        codeAddress(address);
        initAutocomplete();
      }

    }

  };

})();
getMap.getAddress();
*/
</script>


</body>
</html>
